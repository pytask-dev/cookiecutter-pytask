[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.0"]

[tool.setuptools_scm]
write_to = "src/{{ cookiecutter.project_slug }}/_version.py"

[project]
name = "{{ cookiecutter.project_slug }}"
description = "{{ cookiecutter.project_description }}"
requires-python = ">=3.8"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: {{ cookiecutter.open_source_license }} License",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
]
dynamic = ["version"]
dependencies = ["pytask"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.license]
text = "{{ cookiecutter.open_source_license }}"

[[project.authors]]
name = "{{ cookiecutter.author }}"
email = "{{ cookiecutter.email }}"

[project.optional-dependencies]
docs = [
  "furo",
  "ipython",
  "myst-parser",
  "nbsphinx",
  "sphinx",
  "sphinx-copybutton",
  "sphinx-design>=0.3",
  "sphinx-toolbox",
  "sphinxext-opengraph",
]
test = []

[project.urls]
Changelog = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
Documentation = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
Github = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}"
Tracker = "https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}/issues"

[tool.setuptools]
include-package-data = true
zip-safe = false
platforms = ["unix", "linux", "osx", "win32"]
license-files = ["LICENSE"]

[tool.setuptools.package-dir]
"" = "src"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

{% if cookiecutter.add_mypy == "yes" %}[tool.mypy]
files = ["src", "tests"]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
ignore_errors = true{% endif %}

[tool.pytask.ini_options]
paths = ["src/{{ cookiecutter.project_slug }}"]

[tool.ruff]
target-version = "py{{ cookiecutter.python_version | replace('.', '') }}"
fix = true
unsafe-fixes = true

[tool.ruff.lint]
extend-ignore = [
    "COM812",  # Comply with ruff-format.
    "ISC001",  # Comply with ruff-format.
]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "ANN", "S101"]
"docs/source/conf.py" = ["INP001"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
addopts = ["--doctest-modules"]
testpaths = ["tests"]
filterwarnings = [
    "ignore: the imp module is deprecated in favour of importlib",
    "ignore: Using or importing the ABCs from 'collections' instead of from",
    "ignore: The (parser|symbol) module is deprecated and will be removed in future",
]
markers = [
    "wip: Tests that are work-in-progress.",
    "unit: Flag for unit tests which target mainly a single function.",
    "integration: Flag for integration tests which may comprise of multiple unit tests.",
    "end_to_end: Flag for tests that cover the whole program.",
]
norecursedirs = [".idea", ".tox"]
